#ifndef TS
#define TS(x,str,val)
#endif

TS(IDENTIFIER,              "identifier", = 256)
TS(INTEGER,                 "integer number",)
TS(CHARACTER_CONSTANT,      "character constant",)
TS(WIDE_CHARACTER_CONSTANT, "wide character constant",)
TS(FLOATINGPOINT,           "floatingpoint number",)
TS(STRING_LITERAL,          "string literal",)
TS(WIDE_STRING_LITERAL,     "wide string literal",)

#define PUNCTUATOR(name,string,val)   T(_ALL,name,string,val)
#include "tokens_punctuator.inc"
#undef PUNCTUATOR

#define S(mode,x)   T(mode,x,#x,)
S(_ALL, auto)
S(_ALL, break)
S(_ALL, case)
S(_ALL, char)
S(_ALL, continue)
S(_ALL, default)
S(_ALL, do)
S(_ALL, double)
S(_ALL, else)
S(_ALL, enum)
S(_ALL, extern)
S(_ALL, float)
S(_ALL, for)
S(_ALL, goto)
S(_ALL, if)
S(_ALL, int)
S(_ALL, long)
S(_ALL, register)
S(_ALL, return)
S(_ALL, short)
S(_ALL, sizeof)
S(_ALL, static)
S(_ALL, struct)
S(_ALL, switch)
S(_ALL, typedef)
S(_ALL, union)
S(_ALL, unsigned)
S(_ALL, void)
S(_ALL, while)

S(_C99|_GNUC, _Bool)
S(_GNUC, __thread)
S(_GNUC, __extension__)
S(_GNUC, __builtin_classify_type)
S(_GNUC, __builtin_va_list)
S(_GNUC, __builtin_expect)
S(_GNUC, __builtin_offsetof)
S(_GNUC, __builtin_va_arg)
S(_GNUC, __builtin_va_end)
S(_GNUC, __builtin_alloca)
S(_GNUC, __builtin_nanf)
S(_GNUC, __builtin_nan)
S(_GNUC, __builtin_nand)
S(_GNUC, __builtin_isgreater)
S(_GNUC, __builtin_isgreaterequal)
S(_GNUC, __builtin_isless)
S(_GNUC, __builtin_islessequal)
S(_GNUC, __builtin_islessgreater)
S(_GNUC, __builtin_isunordered)
S(_GNUC, __builtin_constant_p)
S(_GNUC, __builtin_prefetch)
S(_GNUC, __PRETTY_FUNCTION__)
S(_ALL, __FUNCTION__)
S(_C99, __func__)
S(_MS, __FUNCSIG__)
S(_MS, __FUNCDNAME__)
#undef S

T(_ANSI|_C99,   signed,       "signed",)
T(_ALL,       __signed,       "__signed",               = T_signed)
T(_ALL,       __signed__,     "__signed__",             = T_signed)
T(_C99|_GNUC, _Complex,       "_Complex",)
T(_GNUC,      __complex__,    "__complex__",            = T__Complex)
T(_GNUC,      __complex,      "__complex",              = T__Complex)
T(_C99|_GNUC, _Imaginary,     "_Imaginary",)
T(_GNUC,      __real__,       "__real__",)
T(_GNUC,      __real,         "__real",                 = T___real__)
T(_GNUC,      __imag__,       "__imag__",)
T(_GNUC,      __imag,         "__imag",                 = T___imag__)
T(_GNUC|_MS,  __alignof__,    "__alignof__",)
T(_GNUC|_MS,  __alignof,      "__alignof",              = T___alignof__)
T(_MS,        _alignof,       "_alignof",               = T___alignof__)
T(_ANSI|_C99, const,          "const",)
T(_GNUC,      __const,        "__const",                = T_const)
T(_GNUC,      __const__,      "__const__",              = T_const)
T(_C99,       restrict,       "restrict",)
T(_GNUC,      __restrict__,   "__restrict__",           = T_restrict)
T(_GNUC,      __restrict,     "__restrict",             = T_restrict)
T(_MS,        _restrict,      "_restrict",              = T_restrict)
T(_ALL,       asm,            "asm",)
T(_GNUC,      __asm__,        "__asm__",                = T_asm)
T(_MS,        _asm,           "_asm",                   = T_asm)
T(_GNUC|_MS,  __asm,          "__asm",                  = T_asm)
T(_ANSI|_C99, volatile,       "volatile",)
T(_GNUC,      __volatile,     "__volatile",             = T_volatile)
T(_GNUC,      __volatile__,   "__volatile__",           = T_volatile)
T(_C99,       inline,         "inline",)
T(_GNUC|_MS,  __inline,       "__inline",               = T_inline)
T(_GNUC,      __inline__,     "__inline__",             = T_inline)
T(_GNUC,      typeof,         "typeof",)
T(_GNUC,      __typeof,       "__typeof",               = T_typeof)
T(_GNUC,      __typeof__,     "__typeof__",             = T_typeof)
T(_GNUC,      __attribute__,  "__attribute__",)

T(_GNUC,     __builtin_va_start,     "__builtin_va_start",)
T(_GNUC,     __builtin_stdarg_start, "__builtin_stdarg_start", = T___builtin_va_start)

T(_MS,      _near,            "_near",)
T(_MS,      __near,           "__near",                  = T__near)
T(_MS,      _far,             "_far",)
T(_MS,      __far,            "__far",                   = T__far)
T(_MS,      cdecl,            "cdecl",)
T(_MS,      _cdecl,           "_cdecl",                  = T_cdecl)
T(_MS,      __cdecl,          "__cdecl",                 = T_cdecl)
T(_MS,      _stdcall,         "_stdcall",)
T(_MS,      __stdcall,        "__stdcall",               = T__stdcall)
T(_MS,      _fastcall,        "_fastcall",)
T(_MS,      __fastcall,       "__fastcall",              = T__fastcall)
T(_MS,      __thiscall,       "__thiscall",)
T(_MS,      _forceinline,     "_forceinline",)
T(_MS,      __forceinline,    "__forceinline",           = T__forceinline)
T(_MS,      __unaligned,      "__unaligned",)
T(_MS,      _assume,          "_assume",)
T(_MS,      __assume,         "__assume",                = T__assume)
T(_MS,      _try,             "_try",)
T(_MS,      __try,            "__try",                   = T__try)
T(_MS,      _finally,         "_finally",)
T(_MS,      __finally,        "__finally",               = T__finally)
T(_MS,      _leave,           "_leave",)
T(_MS,      __leave,          "__leave",                 = T__leave)
T(_MS,      _except,          "_except",)
T(_MS,      __except,         "__except",                = T__except)
T(_MS,      _declspec,        "_declspec",)
T(_MS,      __declspec,       "__declspec",              = T__declspec)
T(_MS,      _based,            "_based",)
T(_MS,      __based,          "__based",                 = T__based)
T(_MS,      __noop,           "__noop",)

T(_MS,      __ptr32,          "__ptr32",)
T(_MS,      __ptr64,          "__ptr64",)
T(_MS,      __sptr,           "__sptr",)
T(_MS,      __uptr,           "__uptr",)
T(_MS,      _w64,             "_w64",)
T(_MS,      __w64,            "__w64",                   = T__w64)

T(_MS,      _int8,            "_int8",)
T(_MS,      __int8,           "__int8",                  = T__int8)
T(_MS,      _int16,           "_int16",)
T(_MS,      __int16,          "__int16",                 = T__int16)
T(_MS,      _int32,           "_int32",)
T(_MS,      __int32,          "__int32",                 = T__int32)
T(_MS,      _int64,           "_int64",)
T(_MS,      __int64,          "__int64",                 = T__int64)
T(_MS,      _int128,          "_int128",)
T(_MS,      __int128,         "__int128",                = T__int128)

#undef _T
